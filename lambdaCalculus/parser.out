Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> expression
Rule 1     expression -> expression PLUS expression
Rule 2     expression -> expression MINUS expression
Rule 3     expression -> MINUS expression
Rule 4     expression -> expression TIMES expression
Rule 5     expression -> NUMBER

Terminals, with rules where they appear

MINUS                : 2 3
NUMBER               : 5
PLUS                 : 1
TIMES                : 4
error                : 

Nonterminals, with rules where they appear

expression           : 1 1 2 2 3 4 4 0

Parsing method: LALR

state 0

    (0) S' -> . expression
    (1) expression -> . expression PLUS expression
    (2) expression -> . expression MINUS expression
    (3) expression -> . MINUS expression
    (4) expression -> . expression TIMES expression
    (5) expression -> . NUMBER

    MINUS           shift and go to state 1
    NUMBER          shift and go to state 2

    expression                     shift and go to state 3

state 1

    (3) expression -> MINUS . expression
    (1) expression -> . expression PLUS expression
    (2) expression -> . expression MINUS expression
    (3) expression -> . MINUS expression
    (4) expression -> . expression TIMES expression
    (5) expression -> . NUMBER

    MINUS           shift and go to state 1
    NUMBER          shift and go to state 2

    expression                     shift and go to state 4

state 2

    (5) expression -> NUMBER .

    PLUS            reduce using rule 5 (expression -> NUMBER .)
    MINUS           reduce using rule 5 (expression -> NUMBER .)
    TIMES           reduce using rule 5 (expression -> NUMBER .)
    $end            reduce using rule 5 (expression -> NUMBER .)


state 3

    (0) S' -> expression .
    (1) expression -> expression . PLUS expression
    (2) expression -> expression . MINUS expression
    (4) expression -> expression . TIMES expression

    PLUS            shift and go to state 6
    MINUS           shift and go to state 5
    TIMES           shift and go to state 7


state 4

    (3) expression -> MINUS expression .
    (1) expression -> expression . PLUS expression
    (2) expression -> expression . MINUS expression
    (4) expression -> expression . TIMES expression

    PLUS            reduce using rule 3 (expression -> MINUS expression .)
    MINUS           reduce using rule 3 (expression -> MINUS expression .)
    TIMES           reduce using rule 3 (expression -> MINUS expression .)
    $end            reduce using rule 3 (expression -> MINUS expression .)

  ! PLUS            [ shift and go to state 6 ]
  ! MINUS           [ shift and go to state 5 ]
  ! TIMES           [ shift and go to state 7 ]


state 5

    (2) expression -> expression MINUS . expression
    (1) expression -> . expression PLUS expression
    (2) expression -> . expression MINUS expression
    (3) expression -> . MINUS expression
    (4) expression -> . expression TIMES expression
    (5) expression -> . NUMBER

    MINUS           shift and go to state 1
    NUMBER          shift and go to state 2

    expression                     shift and go to state 8

state 6

    (1) expression -> expression PLUS . expression
    (1) expression -> . expression PLUS expression
    (2) expression -> . expression MINUS expression
    (3) expression -> . MINUS expression
    (4) expression -> . expression TIMES expression
    (5) expression -> . NUMBER

    MINUS           shift and go to state 1
    NUMBER          shift and go to state 2

    expression                     shift and go to state 9

state 7

    (4) expression -> expression TIMES . expression
    (1) expression -> . expression PLUS expression
    (2) expression -> . expression MINUS expression
    (3) expression -> . MINUS expression
    (4) expression -> . expression TIMES expression
    (5) expression -> . NUMBER

    MINUS           shift and go to state 1
    NUMBER          shift and go to state 2

    expression                     shift and go to state 10

state 8

    (2) expression -> expression MINUS expression .
    (1) expression -> expression . PLUS expression
    (2) expression -> expression . MINUS expression
    (4) expression -> expression . TIMES expression

    MINUS           reduce using rule 2 (expression -> expression MINUS expression .)
    $end            reduce using rule 2 (expression -> expression MINUS expression .)
    PLUS            shift and go to state 6
    TIMES           shift and go to state 7

  ! PLUS            [ reduce using rule 2 (expression -> expression MINUS expression .) ]
  ! TIMES           [ reduce using rule 2 (expression -> expression MINUS expression .) ]
  ! MINUS           [ shift and go to state 5 ]


state 9

    (1) expression -> expression PLUS expression .
    (1) expression -> expression . PLUS expression
    (2) expression -> expression . MINUS expression
    (4) expression -> expression . TIMES expression

    PLUS            reduce using rule 1 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 1 (expression -> expression PLUS expression .)
    $end            reduce using rule 1 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 7

  ! TIMES           [ reduce using rule 1 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 6 ]
  ! MINUS           [ shift and go to state 5 ]


state 10

    (4) expression -> expression TIMES expression .
    (1) expression -> expression . PLUS expression
    (2) expression -> expression . MINUS expression
    (4) expression -> expression . TIMES expression

    PLUS            reduce using rule 4 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 4 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 4 (expression -> expression TIMES expression .)
    $end            reduce using rule 4 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 6 ]
  ! MINUS           [ shift and go to state 5 ]
  ! TIMES           [ shift and go to state 7 ]

